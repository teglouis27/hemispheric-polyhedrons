ClearAll[OrderPointsClockwise3D];

OrderPointsClockwise3D[pts_, clockwise_: True] := Module[
  {normal, plane, projectedPts, centroid, angles, sortedPts},

  normal = Cross[pts[[2]] - pts[[1]], pts[[3]] - pts[[1]]];
  plane = Ordering[Abs[normal], -1][[1]];
  projectedPts = Delete[#, plane] & /@ pts;
   centroid = Mean[projectedPts];
  angles = ArcTan[#[[1]] - centroid[[1]], #[[2]] - centroid[[2]]] & /@ projectedPts;
  sortedPts = pts[[Ordering[angles]]];
  
  If[clockwise, Reverse[sortedPts], sortedPts]
]

scaleXYKeepZ[points_, factor_] := ({factor #[[1]], factor #[[2]], #[[3]]} & /@ points);

hPoints =  OrderPointsClockwise3D[{#1, #2, 0} & @@@N[ PolygonCoordinates[RegularPolygon[10]]]];
vPoints=OrderPointsClockwise3D[{#1, #2, 0} & @@@ N[PolygonCoordinates[RegularPolygon[18]]]];
Graph3D[UndirectedEdge @@@ Partition[hPoints, 2, 1, {1, 1}]];


(*sortedList=SortBy[vPoints, (First[N[#]] &) ];*)

(* Compute horizontal segment lengths *)
horizontalLengths = Abs[Subtract @@@ (#[[All, 1]] & /@ GatherBy[vPoints, #[[2]] &])];

originalWidth=horizontalLengths[[1]];

filteredVYSortedUniqueList = 
  Values@GroupBy[
    Select[SortBy[vPoints, (N[#[[2]]]) &], #[[2]] >= 0 &], 
    #[[2]] &, 
    First
  ];
newWidth=horizontalLengths[[2]];
scalingFactor=newWidth/originalWidth;
dz1=filteredVYSortedUniqueList[[2]][[2]]-filteredVYSortedUniqueList[[1]][[2]];
h2Points=scaleXYKeepZ[hPoints, scalingFactor]+Threaded[{0,0,dz1}];

newWidth=horizontalLengths[[3]];
scalingFactor=newWidth/originalWidth;
dz2=filteredVYSortedUniqueList[[3]][[2]]-filteredVYSortedUniqueList [[2]][[2]];
h3Points=scaleXYKeepZ[hPoints, scalingFactor]+Threaded[{0,0,dz2+dz1}];

newWidth=horizontalLengths[[4]];
scalingFactor=newWidth/originalWidth;
dz3=filteredVYSortedUniqueList[[4]][[2]]-filteredVYSortedUniqueList [[3]][[2]];
h4Points=scaleXYKeepZ[hPoints, scalingFactor] +Threaded[{0,0,dz3+dz2+dz1}];

newWidth=horizontalLengths[[5]];
scalingFactor=newWidth/originalWidth;
dz4=filteredVYSortedUniqueList[[5]][[2]]-filteredVYSortedUniqueList [[4]][[2]];
h5Points=scaleXYKeepZ[hPoints, scalingFactor] +Threaded[{0,0,dz4+dz3+dz2+dz1}];

Show[
Graphics3D[{
   {PointSize[Large], RGBColor[1/5,1/5,1/5], Point[hPoints]},
 {PointSize[Large],RGBColor[1/4,1/4,1/4], Point[h2Points]},
   {PointSize[Large], RGBColor[1/3,1/3,1/3], Point[h3Points]},
   {PointSize[Large], RGBColor[1/2,1/2,1/2], Point[h4Points]},
      {PointSize[Large], RGBColor[1/1,1/1,1/1], Point[h5Points]},
   
   (* Connect points in each layer to form closed polygons *)
   Black, Line[Append[hPoints, First[hPoints]]],  
   Black, Line[Append[h2Points, First[h2Points]]], 
   Black, Line[Append[h3Points, First[h3Points]]],
 Black, Line[Append[h4Points, First[h4Points]]],
  Black, Line[Append[h5Points, First[h5Points]]],

   (* Connect corresponding points between layers *)
   Table[Line[{hPoints[[i]], h2Points[[i]]}], {i, Length[hPoints]}],
   Table[Line[{h2Points[[i]], h3Points[[i]]}], {i, Length[h2Points]}],
   Table[Line[{h3Points[[i]], h4Points[[i]]}], {i, Length[h3Points]}],
    Table[Line[{h4Points[[i]], h5Points[[i]]}], {i, Length[h4Points]}]
   },
  Boxed -> False,AspectRatio->Automatic, Axes -> False, ImageSize->Large
],
ViewPoint->{0,\[Infinity], 0}]
